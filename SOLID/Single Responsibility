package OOP;

public class Main {
    public static void main(String[] args) {

    }

}

interface Shape {
    void draw(Renderer renderer, DrawingRepository drawingRepository);
}

interface DrawingManager {
    void draw(Shape shape);
}

interface DrawingRepository {
}

interface Renderer {
    void render(DrawingRepository drawingRepository, Shape shape);
}

class DrawingManagerImpl implements DrawingManager {

    private final DrawingRepository drawingRepository;
    private final Renderer renderer;

    public DrawingManagerImpl(DrawingRepository drawingRepository, Renderer renderer) {
        this.drawingRepository = drawingRepository;
        this.renderer = renderer;
    }


    @Override
    public void draw(Shape shape) {
        shape.draw(this.renderer, this.drawingRepository);
    }
}

class Rectangle implements Shape {
    private double width;
    private double height;

    public Rectangle(double width, double height) {
        this.width = width;
        this.height = height;
    }

    public double getWidth() {
        return this.width;
    }

    public void setWidth(double width) {
        this.width = width;
    }

    public double getHeight() {
        return this.height;
    }

    public void setHeight(double height) {
        this.height = height;
    }

    public double getArea() {
        return this.height * this.width;
    }

    @Override
    public void draw(Renderer renderer, DrawingRepository drawingRepository) {
        renderer.render(drawingRepository, this);
    }
}
